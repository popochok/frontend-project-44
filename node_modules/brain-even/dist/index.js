'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _readlineSync = require('readline-sync');

var _readlineSync2 = _interopRequireDefault(_readlineSync);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const gameRounds = 3; /* eslint-disable no-console */

const sayHello = gameTask => {
  const helloMessage = `Welcome to the Brain Games!\n${ gameTask }`;
  console.log(`${ helloMessage }\n`);
  const userName = _readlineSync2.default.question('May I have your name? ');
  console.log(`Hello, ${ userName }`);
  return userName;
};

const getAnswer = (checkAnswer, wrongAnswerText) => {
  for (;;) {
    const answer = _readlineSync2.default.question('Your answer: ');
    if (checkAnswer(answer)) {
      return answer;
    }

    console.log(wrongAnswerText);
  }
};

exports.default = (gameTask, makeQuestion, checkAnswer, wrongAnswerText) => {
  let success = true;
  const userName = sayHello(gameTask);
  for (let i = 1; i <= gameRounds; i += 1) {
    const gameData = makeQuestion();
    console.log(`Question: ${ gameData.value }`);
    const answer = getAnswer(checkAnswer, wrongAnswerText);
    const correctAnswer = gameData.correctAnswer;
    if (answer !== correctAnswer) {
      success = false;
      console.log(`'${ answer }' is wrong answer ;(. Correct answer was '${ correctAnswer }'`);
      break;
    }
    console.log('Correct!');
  }

  console.log(success ? `Congratulations, ${ userName }!` : `Let's try again, ${ userName }!`);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJnYW1lUm91bmRzIiwic2F5SGVsbG8iLCJnYW1lVGFzayIsImhlbGxvTWVzc2FnZSIsImNvbnNvbGUiLCJsb2ciLCJ1c2VyTmFtZSIsInF1ZXN0aW9uIiwiZ2V0QW5zd2VyIiwiY2hlY2tBbnN3ZXIiLCJ3cm9uZ0Fuc3dlclRleHQiLCJhbnN3ZXIiLCJtYWtlUXVlc3Rpb24iLCJzdWNjZXNzIiwiaSIsImdhbWVEYXRhIiwidmFsdWUiLCJjb3JyZWN0QW5zd2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFJQTs7Ozs7O0FBRUEsTUFBTUEsYUFBYSxDQUFuQixDLENBTkE7O0FBUUEsTUFBTUMsV0FBWUMsUUFBRCxJQUFzQjtBQUNyQyxRQUFNQyxlQUFnQixpQ0FBK0JELFFBQVMsR0FBOUQ7QUFDQUUsVUFBUUMsR0FBUixDQUFhLElBQUVGLFlBQWEsS0FBNUI7QUFDQSxRQUFNRyxXQUFXLHVCQUFhQyxRQUFiLENBQXNCLHdCQUF0QixDQUFqQjtBQUNBSCxVQUFRQyxHQUFSLENBQWEsV0FBU0MsUUFBUyxHQUEvQjtBQUNBLFNBQU9BLFFBQVA7QUFDRCxDQU5EOztBQVFBLE1BQU1FLFlBQVksQ0FBQ0MsV0FBRCxFQUF3QkMsZUFBeEIsS0FBNEQ7QUFDNUUsV0FBUztBQUNQLFVBQU1DLFNBQVMsdUJBQWFKLFFBQWIsQ0FBc0IsZUFBdEIsQ0FBZjtBQUNBLFFBQUlFLFlBQVlFLE1BQVosQ0FBSixFQUF5QjtBQUN2QixhQUFPQSxNQUFQO0FBQ0Q7O0FBRURQLFlBQVFDLEdBQVIsQ0FBWUssZUFBWjtBQUNEO0FBQ0YsQ0FURDs7a0JBV2UsQ0FDYlIsUUFEYSxFQUViVSxZQUZhLEVBR2JILFdBSGEsRUFJYkMsZUFKYSxLQUtWO0FBQ0gsTUFBSUcsVUFBVSxJQUFkO0FBQ0EsUUFBTVAsV0FBV0wsU0FBU0MsUUFBVCxDQUFqQjtBQUNBLE9BQUssSUFBSVksSUFBSSxDQUFiLEVBQWdCQSxLQUFLZCxVQUFyQixFQUFpQ2MsS0FBSyxDQUF0QyxFQUF5QztBQUN2QyxVQUFNQyxXQUFXSCxjQUFqQjtBQUNBUixZQUFRQyxHQUFSLENBQWEsY0FBWVUsU0FBU0MsS0FBTSxHQUF4QztBQUNBLFVBQU1MLFNBQVNILFVBQVVDLFdBQVYsRUFBdUJDLGVBQXZCLENBQWY7QUFDQSxVQUFNTyxnQkFBZ0JGLFNBQVNFLGFBQS9CO0FBQ0EsUUFBSU4sV0FBV00sYUFBZixFQUE4QjtBQUM1QkosZ0JBQVUsS0FBVjtBQUNBVCxjQUFRQyxHQUFSLENBQWEsS0FBR00sTUFBTywrQ0FBNENNLGFBQWMsSUFBakY7QUFDQTtBQUNEO0FBQ0RiLFlBQVFDLEdBQVIsQ0FBWSxVQUFaO0FBQ0Q7O0FBRURELFVBQVFDLEdBQVIsQ0FBWVEsVUFBVyxxQkFBbUJQLFFBQVMsSUFBdkMsR0FBNkMscUJBQW1CQSxRQUFTLElBQXJGO0FBQ0QsQyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cblxuLy8gQGZsb3dcblxuaW1wb3J0IHJlYWRsaW5lU3luYyBmcm9tICdyZWFkbGluZS1zeW5jJztcblxuY29uc3QgZ2FtZVJvdW5kcyA9IDM7XG5cbmNvbnN0IHNheUhlbGxvID0gKGdhbWVUYXNrOiBzdHJpbmcpID0+IHtcbiAgY29uc3QgaGVsbG9NZXNzYWdlID0gYFdlbGNvbWUgdG8gdGhlIEJyYWluIEdhbWVzIVxcbiR7Z2FtZVRhc2t9YDtcbiAgY29uc29sZS5sb2coYCR7aGVsbG9NZXNzYWdlfVxcbmApO1xuICBjb25zdCB1c2VyTmFtZSA9IHJlYWRsaW5lU3luYy5xdWVzdGlvbignTWF5IEkgaGF2ZSB5b3VyIG5hbWU/ICcpO1xuICBjb25zb2xlLmxvZyhgSGVsbG8sICR7dXNlck5hbWV9YCk7XG4gIHJldHVybiB1c2VyTmFtZTtcbn07XG5cbmNvbnN0IGdldEFuc3dlciA9IChjaGVja0Fuc3dlcjogRnVuY3Rpb24sIHdyb25nQW5zd2VyVGV4dDogc3RyaW5nKTogc3RyaW5nID0+IHtcbiAgZm9yICg7Oykge1xuICAgIGNvbnN0IGFuc3dlciA9IHJlYWRsaW5lU3luYy5xdWVzdGlvbignWW91ciBhbnN3ZXI6ICcpO1xuICAgIGlmIChjaGVja0Fuc3dlcihhbnN3ZXIpKSB7XG4gICAgICByZXR1cm4gYW5zd2VyO1xuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKHdyb25nQW5zd2VyVGV4dCk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChcbiAgZ2FtZVRhc2s6IHN0cmluZyxcbiAgbWFrZVF1ZXN0aW9uOiBGdW5jdGlvbixcbiAgY2hlY2tBbnN3ZXI6IEZ1bmN0aW9uLFxuICB3cm9uZ0Fuc3dlclRleHQ6IHN0cmluZyxcbikgPT4ge1xuICBsZXQgc3VjY2VzcyA9IHRydWU7XG4gIGNvbnN0IHVzZXJOYW1lID0gc2F5SGVsbG8oZ2FtZVRhc2spO1xuICBmb3IgKGxldCBpID0gMTsgaSA8PSBnYW1lUm91bmRzOyBpICs9IDEpIHtcbiAgICBjb25zdCBnYW1lRGF0YSA9IG1ha2VRdWVzdGlvbigpO1xuICAgIGNvbnNvbGUubG9nKGBRdWVzdGlvbjogJHtnYW1lRGF0YS52YWx1ZX1gKTtcbiAgICBjb25zdCBhbnN3ZXIgPSBnZXRBbnN3ZXIoY2hlY2tBbnN3ZXIsIHdyb25nQW5zd2VyVGV4dCk7XG4gICAgY29uc3QgY29ycmVjdEFuc3dlciA9IGdhbWVEYXRhLmNvcnJlY3RBbnN3ZXI7XG4gICAgaWYgKGFuc3dlciAhPT0gY29ycmVjdEFuc3dlcikge1xuICAgICAgc3VjY2VzcyA9IGZhbHNlO1xuICAgICAgY29uc29sZS5sb2coYCcke2Fuc3dlcn0nIGlzIHdyb25nIGFuc3dlciA7KC4gQ29ycmVjdCBhbnN3ZXIgd2FzICcke2NvcnJlY3RBbnN3ZXJ9J2ApO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGNvbnNvbGUubG9nKCdDb3JyZWN0IScpO1xuICB9XG5cbiAgY29uc29sZS5sb2coc3VjY2VzcyA/IGBDb25ncmF0dWxhdGlvbnMsICR7dXNlck5hbWV9IWAgOiBgTGV0J3MgdHJ5IGFnYWluLCAke3VzZXJOYW1lfSFgKTtcbn07XG4iXX0=